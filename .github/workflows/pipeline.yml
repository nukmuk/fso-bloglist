name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: cd client
      - run: npm i
      - run: npm run lint
      - run: npm run build
      - run: npm run test
      - run: cd ../server
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run lint
      - name: Test
        run: npm t
      - name: Trigger deployment
        uses: sws2apps/render-deployment@main #consider using pin for dependabot auto update
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip') }}
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false #optional, default true
          
      - name: Build Success
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ success() && github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip') }}
        with:
          severity: info
          details: Build Succeeded and deployed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Build Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.70.0
      if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch

